{"version":3,"file":"ui.esm.js","sources":["../src/@types/core.ts","../src/utils/error.ts","../src/server/connection.ts","../src/utils/data.ts","../src/engine/dom.ts","../src/engine/compute.ts","../src/engine/compile.ts","../src/utils/lazy.ts","../src/core/directives/on.ts","../src/core/directives.ts","../src/engine/render.ts","../src/core/component.ts","../src/core/index.ts","../src/utils/reset.ts","../src/index.ts"],"sourcesContent":["export type Directives = Record<string, (props: DirectiveProps) => void>;\n\nexport interface DirectiveProps {\n    el: HTMLElement;\n    parts: string[];\n    data: DirectiveData;\n    node?: UINode;\n}\n\nexport type KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent;\n\nexport interface DirectiveData {\n    compute: (event?: Event) => any;\n    value: string;\n}\n\nexport interface UINode {\n    directives: Record<string, DirectiveData>;\n    el: HTMLElement;\n    type: UINodeType;\n}\n\nexport enum UINodeType {\n    NULL = -1,\n    STATIC = 0,\n    DYNAMIC = 1\n}\n\nexport interface LeafUIConfig {\n    el: HTMLElement;\n    data: Record<string, any>;\n    methods: string[];\n    id: string;\n    path: string;\n    requestMethod: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD';\n    component: string;\n}\n","export const error = (\n    err: string,\n    expression?: string,\n    el?: HTMLElement\n): void => {\n    let message = `LeafUI Error: \"${err}\"`;\n    if (expression) message += `\\n\\nExpression: \"${expression}\"`;\n    if (el) message += `\\nElement:`;\n    console.warn(message, el);\n};\n","import Dom from './../engine/dom';\nimport { error } from './../utils/error';\n\nexport default class Connection {\n    protected static headers: Record<string, string>;\n\n    public static connect(\n        type: string,\n        uiData: Record<string, any>,\n        dom: typeof Dom\n    ) {\n        const pageState: Record<string, any> = {};\n        const component: HTMLElement = uiData.element.closest('[ui-state]');\n        const componentData = JSON.parse(component?.getAttribute('ui-state') ?? '{}');\n        const components = document.querySelectorAll('[ui-state]');\n\n        components.forEach((i) => {\n            const attr = JSON.parse(i.getAttribute('ui-state') ?? '{}');\n            pageState[attr.key] = attr;\n        });\n\n        const payload = {\n            type,\n            payload: {\n                params: [],\n                method: uiData.method,\n                methodArgs: uiData.methodArgs,\n                component: componentData?.key,\n                data: pageState,\n            }\n        };\n\n        return fetch(\n            `${window.location.href}?_leaf_ui_config=${JSON.stringify(\n                payload\n            )}`,\n            {\n                method: uiData.config.method,\n                // This enables \"cookies\".\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'text/html, application/xhtml+xml',\n                    'X-Leaf-UI': 'true',\n\n                    // set Custom Headers\n                    ...this.headers,\n\n                    // We'll set this explicitly to mitigate potential interference from ad-blockers/etc.\n                    Referer: window.location.href\n                }\n            }\n        ).then(async response => {\n            if (response.ok) {\n                response.text().then(response => {\n                    const data = JSON.parse(response);\n                    window._leafUIConfig.data = data.state;\n                    dom.diff(\n                        data.html,\n                        component.nodeName === 'HTML' || !component\n                            ? document.body!\n                            : component\n                    );\n                });\n            } else {\n                error(await response.text().then(res => res));\n            }\n        });\n    }\n}\n","import Component from './../core/component';\nimport { LeafUIConfig } from './../@types/core';\n\nexport const eventDirectivePrefixRE = (): RegExp => /on|@/gim;\nexport const rawDirectiveSplitRE = (): RegExp => /:|\\./gim;\n\nexport const hasDirectiveRE = (): RegExp => {\n    return new RegExp(\n        `(ui-|${Object.keys(DIRECTIVE_SHORTHANDS).join('|')})\\\\w+`,\n        'gim'\n    );\n};\n\nexport const expressionPropRE = (prop: string): RegExp => {\n    // Utilizes \\b (word boundary) for prop differentiation.\n    // Fails when next character is a \\w (Word).\n    return new RegExp(`\\\\b${prop}\\\\b`, 'gim');\n};\n\nexport enum DIRECTIVE_SHORTHANDS {\n    '@' = 'on',\n    ':' = 'bind'\n}\n\nexport function arraysMatch(a: any[], b: any[]) {\n    return (\n        Array.isArray(a) &&\n        Array.isArray(b) &&\n        a.length === b.length &&\n        a.every((val, index) => val === b[index])\n    );\n}\n\ndeclare global {\n    interface Window {\n        leafUI: {\n            rootEl?: HTMLElement;\n            component: Component;\n        };\n        _leafUIConfig: LeafUIConfig;\n    }\n\n    interface HTMLElement {\n        component: Component;\n        compile: () => void;\n    }\n}\n\nwindow.leafUI = window.leafUI || {};\n","import { initComponent } from './../core/component';\nimport { arraysMatch } from './../utils/data';\n\nexport default class Dom {\n    /**\n     * Get the body of an HTML string\n     *\n     * @param html The html to parse\n     * @param removeScripts Whether to remove scripts from the html\n     * @returns The body/root of the html\n     */\n    public static getBody(\n        html: string,\n        removeScripts: boolean = false,\n        nodeToReturn: 'body' | 'root' = 'body'\n    ): HTMLElement {\n        const parser = new DOMParser();\n        const dom = parser.parseFromString(html, 'text/html');\n\n        if (removeScripts === true) {\n            const scripts = dom.body.getElementsByTagName('script');\n\n            for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n            }\n        }\n\n        return nodeToReturn === 'body' ? dom.body : dom.documentElement;\n    }\n\n    /**\n     * Wrap DOM node with a template element\n     */\n    public static wrap(node: Node): HTMLElement {\n        const wrapper = document.createElement('x-leafui-wrapper');\n        wrapper.appendChild(node);\n        return wrapper;\n    }\n\n    /**\n     * Parse string to DOM\n     *\n     * @param html The html to parse\n     */\n    public static parse(html: string): HTMLElement {\n        const parser = new DOMParser();\n        const dom = parser.parseFromString(html, 'text/html');\n\n        return dom.getRootNode().firstChild as HTMLElement;\n    }\n\n    /**\n     * Get the type for a node\n     * @param  {HTMLElement} node The node\n     * @return {String} The type\n     */\n    public static getNodeType(node: HTMLElement): string {\n        if (node.nodeType === 3) return 'text';\n        if (node.nodeType === 8) return 'comment';\n        return node.tagName.toLowerCase();\n    }\n\n    /**\n     * Get the content from a node\n     * @param  {Node}   node The node\n     * @return {String}      The type\n     */\n    public static getNodeContent(node: HTMLElement) {\n        if (node.children && node.children.length > 0) return null;\n        return node.textContent;\n    }\n\n    /**\n     * Diff the DOM from a string and an element\n     *\n     * @param newNode The new node\n     * @param oldNode The old node\n     * @returns The diffed node\n     */\n    public static diff(newNode: string, oldNode: HTMLElement): void {\n        if (newNode.includes('<html')) {\n            if (typeof window !== 'undefined') {\n                oldNode = window.document.documentElement;\n            }\n        }\n\n        const structuredNewNode =\n            oldNode instanceof HTMLHtmlElement\n                ? Dom.getBody(newNode, false, 'root')\n                : oldNode.nodeName === 'BODY'\n                ? Dom.getBody(newNode, false)\n                : Dom.getBody(newNode, true).children[0];\n        const structuredOldNode = oldNode;\n\n        Dom.diffElements(structuredNewNode as HTMLElement, structuredOldNode);\n    }\n\n    /**\n     * Diff the DOM from two elements\n     *\n     * @param newNode The new node\n     * @param oldNode The old node\n     * @returns The diffed node\n     */\n    public static diffElements(\n        newNode: HTMLElement,\n        oldNode: HTMLElement\n    ): void {\n        const newNodes = Array.prototype.slice.call(newNode.children);\n        const oldNodes = Array.prototype.slice.call(oldNode.children);\n\n        let count = oldNodes.length - newNodes.length;\n\n        if (count > 0) {\n            for (; count > 0; count--) {\n                oldNodes[oldNodes.length - count].parentNode.removeChild(\n                    oldNodes[oldNodes.length - count]\n                );\n            }\n        }\n\n        for (let index = 0; index < newNodes.length; index++) {\n            const node = newNodes[index];\n\n            if (!oldNodes[index]) {\n                const newNodeClone = node.cloneNode(true);\n                oldNode.appendChild(newNodeClone);\n                initComponent(newNodeClone);\n                continue;\n            }\n\n            if (\n                node instanceof HTMLScriptElement &&\n                oldNodes[index] instanceof HTMLScriptElement\n            ) {\n                if (\n                    node.src !== oldNodes[index].src ||\n                    node.innerHTML !== oldNodes[index].innerHTML\n                ) {\n                    const newNodeClone = node.cloneNode(true);\n                    oldNodes[index].parentNode.replaceChild(\n                        newNodeClone,\n                        oldNodes[index]\n                    );\n                }\n\n                continue;\n            }\n\n            if (\n                !arraysMatch(\n                    Object.values(node.parentNode?.attributes ?? {}),\n                    Object.values(oldNodes[index].parentNode?.attributes ?? {})\n                )\n            ) {\n                for (\n                    let nIndex = 0;\n                    nIndex < node.parentNode.attributes?.length;\n                    nIndex++\n                ) {\n                    const attribute = node.parentNode.attributes[nIndex];\n                    oldNodes[index]?.parentNode?.setAttribute(\n                        attribute.name,\n                        attribute.value\n                    );\n                }\n            }\n\n            if (\n                Dom.getNodeType(node) !== Dom.getNodeType(oldNodes[index]) ||\n                !arraysMatch(\n                    Object.keys(oldNodes[index]?.attributes) ?? [],\n                    Object.keys(node.attributes)\n                ) ||\n                oldNodes[index]?.innerHTML !== node.innerHTML\n            ) {\n                const newNodeClone = node.cloneNode(true);\n\n                if (!oldNodes[index].parentNode) {\n                    oldNodes[index].replaceWith(newNodeClone);\n                    initComponent(newNodeClone);\n                } else {\n                    oldNodes[index].parentNode.replaceChild(\n                        newNodeClone,\n                        oldNodes[index]\n                    );\n                    initComponent(newNodeClone);\n                }\n\n                continue;\n            }\n\n            // If content is different, update it\n            const templateContent = Dom.getNodeContent(node);\n            if (\n                templateContent &&\n                templateContent !== Dom.getNodeContent(oldNodes[index])\n            ) {\n                oldNodes[index].textContent = templateContent;\n            }\n\n            if (\n                oldNodes[index].children.length > 0 &&\n                node.children.length < 1\n            ) {\n                oldNodes[index].innerHTML = '';\n                continue;\n            }\n\n            if (\n                oldNodes[index].children.length < 1 &&\n                node.children.length > 0\n            ) {\n                const fragment = document.createDocumentFragment();\n                Dom.diffElements(node, fragment as any);\n                oldNodes[index].appendChild(fragment);\n                continue;\n            }\n\n            if (node.children.length > 0) {\n                Dom.diffElements(node, oldNodes[index]);\n            }\n        }\n    }\n}\n","import { error } from '../utils/error';\nimport Connection from './../server/connection';\nimport Dom from './dom';\n\nexport const compute = (\n    expression: string,\n    el?: HTMLElement,\n    refs: Record<string, HTMLElement> = {}\n): ((event?: Event) => any) => {\n    const specialPropertiesNames = ['$el', '$emit', '$event', '$refs', '$dom'];\n\n    // This \"revives\" a function from a string, only using the new Function syntax once during compilation.\n    // This is because raw function is ~50,000x faster than new Function\n    const computeFunction = new Function(\n        `return (${specialPropertiesNames.join(',')}) => {\n            const method = ${JSON.stringify(expression)}.split('(')[0];\n            const methodArgs = ${JSON.stringify(expression)}.substring(${JSON.stringify(expression)}.indexOf('(') + 1, ${JSON.stringify(expression)}.lastIndexOf(')'));\n\n            if (!window._leafUIConfig.methods.includes(method)) {\n                return error(new ReferenceError(method + ' is not defined'), method, $el);\n            }\n\n            (${\n                Connection.connect\n            })('callMethod', { element: $el, method, methodArgs, config: window._leafUIConfig }, $dom);\n        }`\n    )();\n\n    const emit = (\n        name: string,\n        options?: CustomEventInit,\n        dispatchGlobal = true\n    ) => {\n        const event = new CustomEvent(name, options);\n        const target = dispatchGlobal ? window : el || window;\n\n        target.dispatchEvent(event);\n    };\n\n    return (event?: Event) => {\n        try {\n            return computeFunction(el, emit, event, refs, Dom);\n        } catch (err) {\n            error(err as string, expression, el);\n        }\n    };\n};\n","import { DirectiveData, UINode, UINodeType } from '../@types/core';\nimport { compute } from './compute';\nimport { DIRECTIVE_SHORTHANDS } from '../utils/data';\n\nexport const flattenElementChildren = (\n    rootElement: HTMLElement,\n    ignoreRootElement = false\n): HTMLElement[] => {\n    const collection: HTMLElement[] = [];\n\n    if (!ignoreRootElement) {\n        collection.push(rootElement);\n    }\n\n    for (const childElement of rootElement.children as any) {\n        if (childElement instanceof HTMLElement) {\n            collection.push(\n                ...flattenElementChildren(\n                    childElement,\n                    childElement.attributes.length === 0\n                )\n            );\n        }\n    }\n\n    return collection;\n};\n\nexport const collectRefs = (\n    element: HTMLElement | Document = document\n): Record<string, HTMLElement> => {\n    const refDirective = 'ui-ref';\n    const refElements: NodeListOf<HTMLElement> = element.querySelectorAll(\n        `[${refDirective}]`\n    );\n    const refs: Record<string, HTMLElement> = {};\n\n    refElements.forEach(refElement => {\n        const name = refElement.getAttribute(refDirective);\n\n        if (name) {\n            refs[name] = refElement;\n        }\n    });\n\n    return refs;\n};\n\nexport const initDirectives = (\n    el: HTMLElement\n): Record<string, DirectiveData> => {\n    const directives: Record<string, DirectiveData> = {};\n    const refs = collectRefs();\n\n    // @ts-ignore\n    for (const { name, value } of el.attributes) {\n        const hasDirectivePrefix = name.startsWith('ui-');\n        const hasDirectiveShorthandPrefix = Object.keys(\n            DIRECTIVE_SHORTHANDS\n        ).some(shorthand => name.startsWith(shorthand));\n\n        if (!(hasDirectivePrefix || hasDirectiveShorthandPrefix)) {\n            continue;\n        }\n\n        const directiveData = {\n            compute: compute(value, el, refs),\n            value\n        };\n\n        // Handle normal and shorthand directives=\n        const directiveName = hasDirectivePrefix\n            ? name.slice('ui-'.length)\n            : // @ts-ignore\n              `${DIRECTIVE_SHORTHANDS[name[0]]}:${name.slice(1)}`;\n\n        directives[directiveName.toLowerCase()] = directiveData;\n    }\n\n    return directives;\n};\n\nexport const createASTNode = (el: HTMLElement): UINode | undefined => {\n    const directives = initDirectives(el);\n    const hasDirectives = Object.keys(directives).length > 0;\n    const node = { el, directives, type: UINodeType.STATIC };\n\n    return hasDirectives ? node : undefined;\n};\n\nexport const compile = (\n    el: HTMLElement,\n    ignoreRootElement = false\n): UINode[] => {\n    const uiNodes: UINode[] = [];\n    const elements = flattenElementChildren(el, ignoreRootElement);\n\n    elements.forEach(element => {\n        const newASTNode = createASTNode(element);\n\n        if (newASTNode) {\n            uiNodes.push(newASTNode);\n        }\n    });\n\n    return uiNodes;\n};\n","/**\n * @author Aiden Bai <hello@aidenybai.com>\n * @package lucia\n */\n// Lazy allows us to delay render calls if the main thread is blocked\n// This is kind of like time slicing in React but less advanced\n// It's a generator function that yields after a certain amount of time\n// This allows the browser to render other things while the generator is running\n// It's a bit like a setTimeout but it's more accurate\n\nexport const lazy = (\n  threshold: number,\n  generatorFunction: () => Generator<undefined, void, unknown>,\n): (() => void) => {\n  const generator = generatorFunction();\n  return function next() {\n    const start = performance.now();\n    let task = null;\n    do {\n      task = generator.next();\n    } while (performance.now() - start < threshold && !task.done);\n\n    if (task.done) return;\n    setTimeout(next);\n  };\n};\n\nexport default lazy;\n","import { DirectiveProps, KeyedEvent } from './../../@types/core';\n\nexport const onDirective = ({ el, parts, data }: DirectiveProps): void => {\n    const options: Record<string, boolean> = {};\n    const globalScopeEventProps = ['outside', 'global'];\n    const eventProps = parts.slice(2);\n    const EVENT_REGISTERED_FLAG = `__on_${parts[1]}_registered`;\n\n    // @ts-expect-error: We're adding a custom property to the element\n    if (el[EVENT_REGISTERED_FLAG]) return;\n\n    const target = globalScopeEventProps.some(prop =>\n        String(eventProps).includes(prop)\n    )\n        ? window\n        : el;\n\n    const handler = (event: Event) => {        \n        if (eventProps.length > 0) {\n            if (\n                event instanceof KeyboardEvent &&\n                /\\d/gim.test(String(eventProps))\n            ) {\n                const whitelistedKeycodes: number[] = [];\n                eventProps.forEach(eventProp => {\n                    // @ts-expect-error: eventProp can be a string, but isNaN only accepts number\n                    if (!isNaN(eventProp)) {\n                        whitelistedKeycodes.push(Number(eventProp));\n                    }\n                });\n\n                if (!whitelistedKeycodes.includes(event.keyCode)) return;\n            }\n\n            // Parse event modifiers based on directive prop\n            if (eventProps.includes('prevent')) event.preventDefault();\n            if (eventProps.includes('stop')) event.stopPropagation();\n            if (eventProps.includes('self')) {\n                if (event.target !== el) return;\n            }\n            /* istanbul ignore next */\n            if (eventProps.includes('outside')) {\n                if (el.contains(event.target as Node)) return;\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return;\n            }\n\n            if (eventProps.includes('enter') || eventProps.includes('meta')) {\n                if ((event as KeyboardEvent).key === 'Enter') {\n                    data.compute(event);\n                }\n            }\n\n            if (\n                (eventProps.includes('ctrl') &&\n                    (event as KeyedEvent).ctrlKey) ||\n                (eventProps.includes('alt') && (event as KeyedEvent).altKey) ||\n                (eventProps.includes('shift') &&\n                    (event as KeyedEvent).shiftKey) ||\n                (eventProps.includes('left') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 0) ||\n                (eventProps.includes('middle') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 1) ||\n                (eventProps.includes('right') &&\n                    'button' in event &&\n                    (event as MouseEvent).button === 2)\n            ) {\n                data.compute(event);\n            }\n        } else {\n            data.compute(event);\n        }\n    };\n\n    options.once = eventProps.includes('once');\n    options.passive = eventProps.includes('passive');\n\n    target.addEventListener(parts[1], handler, options);\n\n    // @ts-expect-error: We're adding a custom property to the element\n    el[EVENT_REGISTERED_FLAG] = true;\n};\n","import { DirectiveProps, Directives } from './../@types/core';\n// import { bindDirective } from './directives/bind';\n// import { modelDirective } from './directives/model';\nimport { onDirective } from './directives/on';\n\nexport const directives: Directives = {\n    // BIND: bindDirective,\n    // MODEL: modelDirective,\n    ON: onDirective,\n};\n\nexport const renderDirective = (\n    props: DirectiveProps,\n    directives: Directives\n): void => {\n    directives[props.parts[0].toUpperCase()](props);\n};\n","import lazy from './../utils/lazy';\nimport { renderDirective } from './../core/directives';\nimport { rawDirectiveSplitRE } from './../utils/data';\nimport { Directives, UINode, UINodeType } from './../@types/core';\n\nconst render = (\n    uiNodes: UINode[],\n    directives: Directives,\n): void => {\n    const legalDirectiveNames = Object.keys(directives);\n    const LAZY_MODE_TIMEOUT = 25;\n\n    lazy(LAZY_MODE_TIMEOUT, function*() {\n        for (const node of uiNodes) {\n            if (node.type === UINodeType.NULL) continue;\n            const isStatic = node.type === UINodeType.STATIC;\n            if (isStatic) node.type = UINodeType.NULL;\n            yield;\n\n            if (!isStatic) continue;\n\n            for (const [directiveName, directiveData] of Object.entries(\n                node.directives\n            )) {\n                const rawDirectiveName = directiveName.split(\n                    rawDirectiveSplitRE()\n                )[0];\n\n                if (\n                    !legalDirectiveNames.includes(\n                        rawDirectiveName.toUpperCase()\n                    )\n                )\n                    continue;\n                yield;\n\n                // If affected, then push to render queue\n                if (isStatic) {\n                    const directiveProps = {\n                        el: node.el,\n                        parts: directiveName.split(rawDirectiveSplitRE()),\n                        data: directiveData,\n                        node,\n                    };\n\n                    renderDirective(directiveProps, directives);\n\n                    // [TODO] Remove this after testing\n                    delete node.directives[directiveName];\n                }\n            }\n        }\n    })();\n};\n\nexport default render;\n","import { UINode } from './../@types/core';\nimport { compile } from '../engine/compile';\nimport render from '../engine/render';\nimport { directives } from './directives';\n\nexport default class Component {\n    public uiNodes: UINode[] = [];\n\n    constructor() {\n        this.uiNodes = [];\n    }\n\n    public mount(el: HTMLElement | string) {\n        const rootEl =\n            el instanceof HTMLElement\n                ? el\n                : document.querySelector<HTMLElement>(el) || document.body;\n\n        this.uiNodes = compile(rootEl);\n        this.render();\n        rootEl['component'] = this;\n\n        window.leafUI = {\n            rootEl,\n            component: this\n        };\n\n        return this;\n    }\n\n    /**\n     * Force renders the DOM based on props\n     * @param {string[]=} props - Array of root level properties in state\n     * @returns {undefined}\n     */\n    public render() {\n        render(this.uiNodes, directives);\n    }\n}\n\nexport const initComponent = (element: Element) =>\n    new Component().mount(element as HTMLElement);\n","import Component from './component';\n\n/**\n * Initialize Your Leaf UI root component\n * @param {HTMLElement|Document} element - Root element to find uninitialized components\n */\nexport const init = (element: HTMLElement | Document = document): void => {\n    const leafUI = new Component();\n    const rootElement = element instanceof Document ? element.body : element;\n\n    leafUI.mount(rootElement);\n};\n","/**\n * @author Caleb Porzio\n * @package livewire/livewire\n */\nexport function monkeyPatchDomSetAttributeToAllowAtSymbols() {\n    // Because morphdom may add attributes to elements containing \"@\" symbols\n    // like in the case of an Alpine `@click` directive, we have to patch\n    // the standard Element.setAttribute method to allow this to work.\n    let original = Element.prototype.setAttribute;\n\n    let hostDiv = document.createElement('div');\n\n    Element.prototype.setAttribute = function newSetAttribute(name, value) {\n        if (!name.includes('@')) {\n            return original.call(this, name, value);\n        }\n\n        hostDiv.innerHTML = `<span ${name}=\"${value}\"></span>`;\n\n        let attr = (hostDiv.firstElementChild)!.getAttributeNode(name)!;\n\n        (hostDiv.firstElementChild)!.removeAttributeNode(attr);\n\n        this.setAttributeNode(attr);\n    };\n}\n","import { init } from './core';\nimport { monkeyPatchDomSetAttributeToAllowAtSymbols } from './utils/reset';\nexport * from './@types';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    monkeyPatchDomSetAttributeToAllowAtSymbols();\n    init();\n\n    document.querySelectorAll('[ui-lazy]').forEach(el => {\n        el.removeAttribute('ui-lazy');\n    });\n});\n"],"names":["UINodeType","error","err","expression","el","message","console","warn","Connection","connect","type","uiData","dom","pageState","component","element","closest","componentData","JSON","parse","getAttribute","components","document","querySelectorAll","forEach","i","attr","key","payload","params","method","methodArgs","data","fetch","window","location","href","stringify","config","credentials","headers","Accept","Referer","then","response","ok","text","_leafUIConfig","state","diff","html","nodeName","body","res","rawDirectiveSplitRE","DIRECTIVE_SHORTHANDS","arraysMatch","a","b","Array","isArray","length","every","val","index","leafUI","Dom","getBody","removeScripts","nodeToReturn","parser","DOMParser","parseFromString","scripts","getElementsByTagName","remove","documentElement","wrap","node","wrapper","createElement","appendChild","getRootNode","firstChild","getNodeType","nodeType","tagName","toLowerCase","getNodeContent","children","textContent","newNode","oldNode","includes","structuredNewNode","HTMLHtmlElement","structuredOldNode","diffElements","newNodes","prototype","slice","call","oldNodes","count","parentNode","removeChild","newNodeClone","cloneNode","initComponent","HTMLScriptElement","src","innerHTML","replaceChild","Object","values","attributes","nIndex","attribute","setAttribute","name","value","keys","replaceWith","templateContent","fragment","createDocumentFragment","compute","refs","specialPropertiesNames","computeFunction","Function","join","emit","options","dispatchGlobal","event","CustomEvent","target","dispatchEvent","flattenElementChildren","rootElement","ignoreRootElement","collection","push","childElement","HTMLElement","collectRefs","refDirective","refElements","refElement","initDirectives","directives","hasDirectivePrefix","startsWith","hasDirectiveShorthandPrefix","some","shorthand","directiveData","directiveName","createASTNode","hasDirectives","STATIC","undefined","compile","uiNodes","elements","newASTNode","lazy","threshold","generatorFunction","generator","next","start","performance","now","task","done","setTimeout","onDirective","parts","globalScopeEventProps","eventProps","EVENT_REGISTERED_FLAG","prop","String","handler","KeyboardEvent","test","whitelistedKeycodes","eventProp","isNaN","Number","keyCode","preventDefault","stopPropagation","contains","offsetWidth","offsetHeight","ctrlKey","altKey","shiftKey","button","once","passive","addEventListener","ON","renderDirective","props","toUpperCase","render","legalDirectiveNames","LAZY_MODE_TIMEOUT","NULL","isStatic","entries","rawDirectiveName","split","directiveProps","Component","mount","rootEl","querySelector","init","Document","monkeyPatchDomSetAttributeToAllowAtSymbols","original","Element","hostDiv","newSetAttribute","firstElementChild","getAttributeNode","removeAttributeNode","setAttributeNode","removeAttribute"],"mappings":"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"}